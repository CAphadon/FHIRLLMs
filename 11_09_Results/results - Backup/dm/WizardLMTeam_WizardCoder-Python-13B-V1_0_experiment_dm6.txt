You are tasked with turning this input xml file 
<ns0:ADT_GEKID xmlns:ns0="http://www.gekid.de/namespace" Schema_Version="2.2.1">
	<ns0:Absender Absender_ID="22222244" Software_ID="ONKOSTAR" Installations_ID="2.9.8">
		<ns0:Absender_Bezeichnung>UKER</ns0:Absender_Bezeichnung>
		<ns0:Absender_Ansprechpartner />
		<ns0:Absender_Anschrift>Maximiliansplatz 2, 91054 Erlangen</ns0:Absender_Anschrift>
	</ns0:Absender>
	<ns0:Menge_Patient>
		<ns0:Patient>
            <ns0:Patienten_Stammdaten Patient_ID="123456789">
                <ns0:KrankenversichertenNr>Q123456</ns0:KrankenversichertenNr>
                <ns0:KrankenkassenNr>555555</ns0:KrankenkassenNr>
                <ns0:Patienten_Nachname>Max</ns0:Patienten_Nachname>
                <ns0:Patienten_Vornamen>Mustermann</ns0:Patienten_Vornamen>
                <ns0:Patienten_Geschlecht>M</ns0:Patienten_Geschlecht>
                <ns0:Patienten_Geburtsdatum>02.04.2023</ns0:Patienten_Geburtsdatum>
                <ns0:Menge_Adresse>
                    <ns0:Adresse>
                        <ns0:Patienten_Strasse>Bahnhofstr. 1</ns0:Patienten_Strasse>
                        <ns0:Patienten_Land>DE</ns0:Patienten_Land>
                        <ns0:Patienten_PLZ>70070</ns0:Patienten_PLZ>
                        <ns0:Patienten_Ort>Tuebingen</ns0:Patienten_Ort>
                    </ns0:Adresse>
                </ns0:Menge_Adresse>
            </ns0:Patienten_Stammdaten>
			<ns0:Menge_Meldung>
				<ns0:Meldung Meldung_ID="ST0001238" Melder_ID="ST">
					<ns0:Meldedatum>10.11.2021</ns0:Meldedatum>
					<ns0:Meldebegruendung>I</ns0:Meldebegruendung>
					<ns0:Meldeanlass>behandlungsende</ns0:Meldeanlass>
					<ns0:Tumorzuordnung Tumor_ID="1">
                        <ns0:Primaertumor_ICD_Code>C72.0</ns0:Primaertumor_ICD_Code>
                        <ns0:Primaertumor_ICD_Version>10 2021 GM</ns0:Primaertumor_ICD_Version>
                        <ns0:Diagnosedatum>18.05.2021</ns0:Diagnosedatum>
                        <ns0:Seitenlokalisation>R</ns0:Seitenlokalisation>
                    </ns0:Tumorzuordnung>
					<ns0:Menge_ST>
						<ns0:ST ST_ID="45900">
							<ns0:ST_Intention>P</ns0:ST_Intention>
							<ns0:ST_Stellung_OP>N</ns0:ST_Stellung_OP>
							<ns0:Menge_Bestrahlung>
								<ns0:Bestrahlung>
									<ns0:ST_Zielgebiet>5.4.-</ns0:ST_Zielgebiet>
									<ns0:ST_Seite_Zielgebiet>T</ns0:ST_Seite_Zielgebiet>
								</ns0:Bestrahlung>
								<ns0:Bestrahlung>
									<ns0:ST_Zielgebiet>1.2</ns0:ST_Zielgebiet>
									<ns0:ST_Seite_Zielgebiet>R</ns0:ST_Seite_Zielgebiet>
									<ns0:ST_Ende_Datum>02.12.2021</ns0:ST_Ende_Datum>
								</ns0:Bestrahlung>
							</ns0:Menge_Bestrahlung>
							<ns0:ST_Ende_Grund>L</ns0:ST_Ende_Grund>
							<ns0:Menge_Nebenwirkung>
								<ns0:ST_Nebenwirkung>
									<ns0:Nebenwirkung_Grad>4</ns0:Nebenwirkung_Grad>
								</ns0:ST_Nebenwirkung>
							</ns0:Menge_Nebenwirkung>
						</ns0:ST>
					</ns0:Menge_ST>
				</ns0:Meldung>
			</ns0:Menge_Meldung>
		</ns0:Patient>
	</ns0:Menge_Patient>
	<ns0:Menge_Melder>
		<ns0:Melder Melder_ID="ST">
			<ns0:Meldende_Stelle>ST</ns0:Meldende_Stelle>
		</ns0:Melder>
	</ns0:Menge_Melder>
</ns0:ADT_GEKID> into a valid FHIR json.
Additionally you are given two other files as example. The first one is a xml similar to the input file, while the second one is the corresponing FHIR json.The example input xml is this: 
<ns0:ADT_GEKID xmlns:ns0="http://www.gekid.de/namespace" Schema_Version="2.2.1">
	<ns0:Absender Absender_ID="999999" Software_ID="ONKOSTAR" Installations_ID="2.9.8">
		<ns0:Absender_Bezeichnung>UKER</ns0:Absender_Bezeichnung>
		<ns0:Absender_Ansprechpartner />
		<ns0:Absender_Anschrift>Maximiliansplatz 2, 91054 Erlangen</ns0:Absender_Anschrift>
	</ns0:Absender>
	<ns0:Menge_Patient>
		<ns0:Patient>
            <ns0:Patienten_Stammdaten Patient_ID="1055555888">
                <ns0:KrankenversichertenNr>Q00000000</ns0:KrankenversichertenNr>
                <ns0:KrankenkassenNr>10000000</ns0:KrankenkassenNr>
                <ns0:Patienten_Nachname>Doe</ns0:Patienten_Nachname>
                <ns0:Patienten_Vornamen>John</ns0:Patienten_Vornamen>
                <ns0:Patienten_Geschlecht>M</ns0:Patienten_Geschlecht>
                <ns0:Patienten_Geburtsdatum>11.09.1900</ns0:Patienten_Geburtsdatum>
                <ns0:Menge_Adresse>
                    <ns0:Adresse>
                        <ns0:Patienten_Strasse>Johnstr. 7</ns0:Patienten_Strasse>
                        <ns0:Patienten_Land>DE</ns0:Patienten_Land>
                        <ns0:Patienten_PLZ>91000</ns0:Patienten_PLZ>
                        <ns0:Patienten_Ort>Johncity</ns0:Patienten_Ort>
                    </ns0:Adresse>
                </ns0:Menge_Adresse>
            </ns0:Patienten_Stammdaten>
			<ns0:Menge_Meldung>
				<ns0:Meldung Meldung_ID="ST0001238" Melder_ID="ST">
					<ns0:Meldedatum>10.11.2021</ns0:Meldedatum>
					<ns0:Meldebegruendung>I</ns0:Meldebegruendung>
					<ns0:Meldeanlass>behandlungsende</ns0:Meldeanlass>
					<ns0:Tumorzuordnung Tumor_ID="1">
                        <ns0:Primaertumor_ICD_Code>C72.0</ns0:Primaertumor_ICD_Code>
                        <ns0:Primaertumor_ICD_Version>10 2021 GM</ns0:Primaertumor_ICD_Version>
                        <ns0:Diagnosedatum>18.05.2021</ns0:Diagnosedatum>
                        <ns0:Seitenlokalisation>R</ns0:Seitenlokalisation>
                    </ns0:Tumorzuordnung>
					<ns0:Menge_ST>
						<ns0:ST ST_ID="45900">
							<ns0:ST_Intention>P</ns0:ST_Intention>
							<ns0:ST_Stellung_OP>N</ns0:ST_Stellung_OP>
							<ns0:Menge_Bestrahlung>
								<ns0:Bestrahlung>
									<ns0:ST_Zielgebiet>5.4.-</ns0:ST_Zielgebiet>
									<ns0:ST_Seite_Zielgebiet>T</ns0:ST_Seite_Zielgebiet>
								</ns0:Bestrahlung>
								<ns0:Bestrahlung>
									<ns0:ST_Zielgebiet>1.2</ns0:ST_Zielgebiet>
									<ns0:ST_Seite_Zielgebiet>R</ns0:ST_Seite_Zielgebiet>
									<ns0:ST_Ende_Datum>02.12.2021</ns0:ST_Ende_Datum>
								</ns0:Bestrahlung>
							</ns0:Menge_Bestrahlung>
							<ns0:ST_Ende_Grund>L</ns0:ST_Ende_Grund>
							<ns0:Menge_Nebenwirkung>
								<ns0:ST_Nebenwirkung>
									<ns0:Nebenwirkung_Grad>4</ns0:Nebenwirkung_Grad>
								</ns0:ST_Nebenwirkung>
							</ns0:Menge_Nebenwirkung>
						</ns0:ST>
					</ns0:Menge_ST>
				</ns0:Meldung>
			</ns0:Menge_Meldung>
		</ns0:Patient>
	</ns0:Menge_Patient>
	<ns0:Menge_Melder>
		<ns0:Melder Melder_ID="ST">
			<ns0:Meldende_Stelle>ST</ns0:Meldende_Stelle>
		</ns0:Melder>
	</ns0:Menge_Melder>
</ns0:ADT_GEKID> And the corresponding output FHIR json is this: 
{"resourceType": "Bundle", "type": "transaction", "entry": [{"fullUrl": "Patient/d9d6b458471f3ff3d65af6021a10d1112718a032eec4b843606616c5faa29937", "resource": {"resourceType": "Patient", "id": "d9d6b458471f3ff3d65af6021a10d1112718a032eec4b843606616c5faa29937", "meta": {"source": "999999.ONKOSTAR:obds-to-fhir:0.0.0-test", "profile": ["https://www.medizininformatik-initiative.de/fhir/core/modul-person/StructureDefinition/PatientPseudonymisiert"]}, "identifier": [{"type": {"coding": [{"system": "http://terminology.hl7.org/CodeSystem/v3-ObservationValue", "code": "PSEUDED"}, {"system": "http://terminology.hl7.org/CodeSystem/v2-0203", "code": "MR", "display": "Medical\u00b7record\u00b7number"}]}, "system": "https://fhir.diz.uk-erlangen.de/identifiers/patient-id", "value": "1055555888"}], "gender": "male", "birthDate": "1900-07", "address": [{"type": "both", "postalCode": "91000", "country": "DE"}]}, "request": {"method": "PUT", "url": "Patient/d9d6b458471f3ff3d65af6021a10d1112718a032eec4b843606616c5faa29937"}}]}
The according FHIR json to this input looks like this: 
{"resourceType": "Bundle", "type": "transaction", "entry": [{"fullUrl": "Patient/d9d6b458471f3ff3d65af6021a10d1112718a032eec4b843606616c5faa29937", "resource": {"resourceType": "Patient", "id": "d9d6b458471f3ff3d65af6021a10d1112718a032eec4b843606616c5faa29937", "meta": {"source": "999999.ONKOSTAR:obds-to-fhir:0.0.0-test", "profile": ["https://www.medizininformatik-initiative.de/fhir/core/modul-person/StructureDefinition/PatientPseudonymisiert"]}, "identifier": [{"type": {"coding": [{"system": "http://terminology.hl7.org/CodeSystem/v3-ObservationValue", "code": "PSEUDED"}, {"system": "http://terminology.hl7.org/CodeSystem/v2-0203", "code": "MR", "display": "Medical\u00b7record\u00b7number"}, "value": "1055555888"}], "system": "https://fhir.diz.uk-erlangen.de/identifiers/patient-id", "value": "1055555888"}, "address": [{"type": "both", "line": ["Johnstr. 7"], "city": "Johncity", "country": "DE", "postalCode": "91000"}]}]}
"""

import lxml.etree as ET
import json
import re
from io import BytesIO
from typing import Dict, List
from datetime import datetime
from collections import defaultdict
from fhir.resources.bundle import Bundle, BundleEntry, BundleEntryRequest
from fhir.resources import Patient, Identifier, Address, HumanName, CodeableConcept, Coding, Bundle
from fhir.resources import FHIRPrimitiveExtension, FHIRReference, FHIRDate
from pydantic import ValidationError
from typing import List, Dict

def get_value(element: ET.Element, path: str) -> str:
    """
    Returns the value of an element with the given path. If the path is not found, returns an empty string.
    """
    value = element.find(path)
    return value.text if value is not None else ""

def convert_gender(gender: str) -> str:
    """
    Converts the given gender string to the corresponding FHIR code.
    """
    if gender == "M":
        return "male"
    elif gender == "F":
        return "female"
    else:
        return "unknown"

def create_fhir_bundle(xml_root: ET.Element) -> Bundle:
    """
    Converts the given XML root element to a FHIR Bundle resource.
    """
    # create a bundle and add the patient
    bundle = Bundle.construct()
    bundle.type = "transaction"
    bundle.entry = []

    # add the patient
    patient = Patient.parse_obj(create_fhir_patient(xml_root))
    bundle_entry = BundleEntry.construct()
    bundle_entry.fullUrl = f"Patient/{patient.id}"
    bundle_entry.resource = patient
    bundle_entry.request = BundleEntryRequest.construct()
    bundle_entry.request.method = "PUT"
    bundle_entry.request.url = f"Patient/{patient.id}"
    bundle.entry.append(bundle_entry)

    return bundle

def create_fhir_patient(xml_root: ET.Element) -> Dict:
    """
    Converts the given XML patient element to a FHIR Patient resource.
    """
    # create a new patient
    patient = Patient.construct()

    # extract the necessary information
    patient.id = get_value(xml_root, ".//ns0:Absender_ID")
    patient.meta = {
        "source": xml_root.get("Schema_Version"),
        "profile": ["https://www.medizininformatik-initiative.de/fhir/core/modul-person/StructureDefinition/PatientPseudonymisiert"]
    }
    patient.identifier = [Identifier(
        type=CodeableConcept(
            coding=[
                Coding(
                    system="http://terminology.hl7.org/CodeSystem/v3-ObservationValue",
                    code="PSEUDED",
                    display="Pseudonymisiert"
                ),
                Coding(
                    system="http://terminology.hl7.org/CodeSystem/v2-0203",
                    code="MR",
                    display="Medical Record Number"
                )
            ],
            value=get_value(xml_root, ".//ns0:KrankenversichertenNr")
        ),
        system="https://fhir.diz.uk-erlangen.de/identifiers/patient-id",
        value=get_value(xml_root, ".//ns0:Patient_ID")
    )]
    patient.gender = convert_gender(get_value(xml_root, ".//ns0:Patienten_Geschlecht"))
    patient.birthDate = datetime.strptime(get_value(xml_root, ".//ns0:Patienten_Geburtsdatum"), "%d.%m.%Y").strftime("%Y-%m")
    patient.name = [HumanName(family=get_value(xml_root, ".//ns0:Patienten_Nachname"), given=[get_value(xml_root, ".//ns0:Patienten_Vornamen")])]
    patient.address = [Address(
        line=[get_value(xml_root, ".//ns0:Patienten_Strasse")],
        city=get_value(xml_root, ".//ns0:Patienten_Ort"),
        postalCode=get_value(xml_root, ".//ns0:Patienten_PLZ"),
        country=get_value(xml_root, ".//ns0:Patienten_Land")
    )]

    return patient.dict()

# read the example xml file
with open("example.xml", "r") as file:
    xml_data = file.read()
xml_root = ET.fromstring(xml_data)

# convert the xml to fhir and print the result
fhir_bundle = create_fhir_bundle(xml_root)
print(json.dumps(fhir_bundle.dict(), indent=2))

# read the example fhir file
with open("example.json", "r") as file:
    fhir_data = file.read()
fhir_dict = json.loads(fhir_data)

# create the original fhir patient
original_patient = Bundle.parse_obj(fhir_dict)

# extract the patient id from the original fhir patient
patient_id = original_patient.entry[0].resource.id

# create a new patient with a different id
new_patient = Patient.parse_obj(create_fhir_patient(xml_root))
new_patient.id = "d9d6b458471f3ff3d65af6021a10d1112718a032eec4b843606616c5faa29937"
new_patient.identifier = [Identifier(
    type=CodeableConcept(
        coding=[
            Coding(system="http://terminology.hl7.org/CodeSystem/v3-ObservationValue", code="PSEUDED"),
            Coding(system="http://terminology.hl7.org/CodeSystem/v2-0203", code="MR", display="Medical Record Number")
        ],
        value=patient_id
    ),
    value=patient_id
)]

# replace the original patient with the new patient
original_patient.entry[0].resource = new_patient
print(json.dumps(original_patient.dict(), indent=2))

# try to validate the new patient
try:
    new_patient.validate()
except ValidationError as e:
    print(f"Validation failed: {e}")

# validate the original patient
original_patient.validate()

# print the new patient
print(json.dumps(new_patient.dict(), indent=2))
